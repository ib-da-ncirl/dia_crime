# global settings
# Note: these global settings will overwrite any individual setting in other sections
# optional filter start date in ISO Local Date format (yyyy-mm-dd)
global.filter_start_date = 2001-01-01
# optional filter end date in ISO Local Date format (yyyy-mm-dd)
#global.filter_end_date = 2001-01-31
global.filter_end_date = 2001-02-28
#global.filter_end_date = 2015-12-31
#global.filter_end_date = 2019-06-30
#global.filter_end_date = 2019-12-31

# java.time.format.DateTimeFormatter pattern for format of Date output keys
global.out_key_date_format = uuuu-MM-dd


# one of OFF, LOW, MEDIUM, HIGH, VERBOSE from DebugLevel enum
#global.debug = VERBOSE
global.debug = HIGH


# Info regarding crime csv file
# input path
crime.in_path = hdfs://localhost:54310/crime/Crimes_-_2001_to_present.csv
# output path
crime.out_path = results/crime
crime.separator = ;
crime.has_header = true

# indices of required data in csv line
# ID;Case Number;Date;Block;IUCR;Primary Type;Description;Location Description;Arrest;Domestic;Beat;District;Ward;Community Area;FBI Code;X Coordinate;Y Coordinate;Year;Updated On;Latitude;Longitude;Location
crime.date = 2
crime.primarytype = 5
crime.description = 6
crime.locationdescription = 7
crime.iucr = 4
crime.fbicode = 14

crime.num_indices = 22
# optional filter start date in ISO Local Date format (yyyy-mm-dd)
crime.filter_start_date = 2001-01-01
# optional filter end date in ISO Local Date format (yyyy-mm-dd)
crime.filter_end_date = 2001-12-31

# java.time.format.DateTimeFormatter pattern for format of Date
crime.date_format = MM/dd/uuuu hh:mm:ss a


# Common info regarding stock csv files
# -------------------------------------
# output path
stock.out_path = results/stock
stock.separator = ,
stock.has_header = true
# indices of required data in csv line
# Date,Open,High,Low,Close,Adj Close,Volume
stock.date = 0
stock.open = 1
stock.high = 2
stock.low = 3
stock.close = 4
stock.adjclose = 5
stock.volume = 6

# factors to apply to values
stock.factors = volume:1000000

stock.num_indices = 7
# optional filter start date in ISO Local Date format (yyyy-mm-dd)
stock.filter_start_date = 2001-01-01
# optional filter end date in ISO Local Date format (yyyy-mm-dd)
stock.filter_end_date = 2001-12-31

# java.time.format.DateTimeFormatter pattern for format of Date
stock.date_format = uuuu-MM-dd

# Info regarding NASDAQ Composite (^IXIC)
nasdaq.stock_tag = IXIC
# input path
nasdaq.in_path = hdfs://localhost:54310/stock/IXIC.csv

# Info regarding Dow Jones Industrial Average (^DJI)
dowjones.stock_tag = DJI
# input path
dowjones.in_path = hdfs://localhost:54310/stock/DJI.csv

# Info regarding S&P 500 (^GSPC)
sp500.stock_tag = GSPC
# input path
sp500.in_path = hdfs://localhost:54310/stock/GSPC.csv


# Info regarding weather csv file
# input path
weather.in_path = hdfs://localhost:54310/weather/f723962a3269a9d4f76b23d7b388d831.csv
# output path
weather.out_path = results/weather
weather.separator = ,
weather.has_header = true
# indices of required data in csv line
# dt,dt_iso,timezone,city_name,lat,lon,temp,feels_like,temp_min,temp_max,pressure,sea_level,grnd_level,humidity,wind_speed,wind_deg,rain_1h,rain_3h,snow_1h,snow_3h,clouds_all,weather_id,weather_main,weather_description,weather_icon
weather.date = 1
weather.temp = 6
weather.feels_like = 7
weather.temp_min = 8
weather.temp_max = 9
weather.pressure = 10
weather.humidity = 13
weather.wind_speed = 14
weather.wind_deg = 15
weather.rain_1h = 16
weather.rain_3h = 17
weather.snow_1h = 18
weather.snow_3h = 19
weather.clouds_all = 20
weather.weather_id = 21
weather.weather_main = 22
weather.weather_description = 23

# java.time.format.DateTimeFormatter pattern for format of Date; e.g. '2001-01-01 00:00:00 +0000 UTC'
weather.date_format = yyyy-MM-dd HH:mm:ss Z z


