#
# The MIT License (MIT)
# Copyright (c) 2020 Ian Buttimer
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.
#

# additional setting for regression job

regression.out_path = property-sum:global.out_path_root,results/regression

#regression.in_path = property-sum:global.out_path_root,results/normalise/part-r-00000
regression.has_header = false

# NOTE: training set dates need to be inside filter dates
# training set start date in ISO Local Date format (yyyy-mm-dd)
regression.train_start_date = 2001-01-01
# training set end date in ISO Local Date format (yyyy-mm-dd)
regression.train_end_date = 2001-01-31
#regression.train_end_date = 2015-12-31

# java.time.format.DateTimeFormatter pattern for format of Date
regression.date_format = property-alias:global.out_key_date_format

regression.stats_input_path = property-sum:global.out_path_root,results/stats/part-r-00000

regression.outputtypes_path = property-sum:global.out_path_root,results/normalise/types-r-00000

regression.train_output_path = property-sum:global.out_path_root,results/training_<datetime>.txt


regression.factors = property-alias:stock.factors


# learning rate - size of update steps in gradient descent
regression.learning_rate = 1.0E-3

# max number of time to run regression
regression.epoch_limit = 50
# run regression until target cost
regression.target_cost = 0
# run regression until no change above specified number of decimal places & count
regression.steady_target = 10
regression.steady_limit = 3
# run regression for specified number of minutes
regression.target_time = 180
# terminate regression if specified number of consecutive cost increases identified
regression.increase_limit = 5

# dependent variable
regression.dependent = total

# crime/weather/stock regression
#regression.in_path = property-sum:global.out_path_root,results/normalise/part-r-00000
# comma separated list of independent variables to use
#regression.independents = clouds_all,feels_like,humidity,pressure,temp,temp_max,temp_min,weather_id,wind_deg,wind_speed,DJI_adjclose,DJI_close,DJI_high,DJI_low,DJI_open,DJI_volume,GSPC_adjclose,GSPC_close,GSPC_high,GSPC_low,GSPC_open,GSPC_volume,IXIC_adjclose,IXIC_close,IXIC_high,IXIC_low,IXIC_open,IXIC_volume
# initial weight for regression calculation; "<property name>=<value>/<property name>=<value>" or a value for all independents
regression.weight = 0
# initial bias for regression calculation
regression.bias = 0

# crime/weather regression
#regression.in_path = property-sum:global.out_path_root,results/normalise/part-r-00001
## comma separated list of independent variables to use
#regression.independents = clouds_all,feels_like,humidity,pressure,temp,temp_max,temp_min,weather_id,wind_deg,wind_speed

#regression.independents =feels_like,temp_min,temp_max

## initial weight for regression calculation; "<property name>=<value>/<property name>=<value>" or a value for all independents
#regression.weight = 0
## initial bias for regression calculation
#regression.bias = 0

# crime/stock regression
#regression.in_path = property-sum:global.out_path_root,results/normalise/part-r-00002
## comma separated list of independent variables to use
#regression.independents = DJI_adjclose,DJI_close,DJI_high,DJI_low,DJI_open,DJI_volume,GSPC_adjclose,GSPC_close,GSPC_high,GSPC_low,GSPC_open,GSPC_volume,IXIC_adjclose,IXIC_close,IXIC_high,IXIC_low,IXIC_open,IXIC_volume

#regression.independents = GSPC_close,GSPC_adjclose,DJI_open,DJI_high,DJI_low,DJI_close,DJI_adjclose,GSPC_open,GSPC_low,GSPC_high,IXIC_close,IXIC_low,IXIC_high,IXIC_open,IXIC_adjclose

## initial weight for regression calculation; "<property name>=<value>/<property name>=<value>" or a value for all independents
#regression.weight = 0
## initial bias for regression calculation
#regression.bias = 0

