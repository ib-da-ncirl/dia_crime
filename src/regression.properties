#
# The MIT License (MIT)
# Copyright (c) 2020 Ian Buttimer
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in all
#  copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#  SOFTWARE.
#

# additional setting for regression job

regression.out_path = results/regression


regression.in_path = results/merge/part-r-00000
regression.has_header = false

# NOTE: training set dates need to be inside filter dates
# training set start date in ISO Local Date format (yyyy-mm-dd)
regression.train_start_date = 2001-01-01
# training set end date in ISO Local Date format (yyyy-mm-dd)
regression.train_end_date = 2001-01-31

# java.time.format.DateTimeFormatter pattern for format of Date
regression.date_format = property-alias:global.out_key_date_format

regression.stats_input_path = results/stats/part-r-00000

regression.outputtypes_path = results/merge/output_types.txt
# property-alias:stats.outputtypes_path

regression.train_output_path = results/training.txt


regression.factors = property-alias:stock.factors


# comma separated list of independent variables to use
regression.independents = 06
# dependent variable
regression.dependent = total

# learning rate - size of update steps in gradient descent
regression.learning_rate = 1.0E-6

# max number of time to run regression
regression.epoch_limit = 10
# run regression until target cost
regression.target_cost = 100
# run regression until no change above specified number of decimal places & count
regression.steady_target = 5
regression.steady_limit = 3

# initial weight for regression calculation
regression.weight = 0
# initial bias for regression calculation
regression.bias = 0

